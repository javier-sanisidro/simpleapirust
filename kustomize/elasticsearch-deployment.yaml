apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yaml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yaml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/elastic: "true"
        io.kompose.service: elasticsearch
    spec:
      containers:
      - env:
        - name: ELASTIC_PASSWORD
          value: abc123.
        - name: ES_JAVA_OPTS
          value: -XX:UseAVX=2 -Xms1g -Xmx1g
        - name: bootstrap.memory_lock
          value: "true"
        - name: cluster.name
          value: docker-cluster
        - name: cluster.routing.allocation.disk.threshold_enabled
          value: "false"
        - name: discovery.type
          value: single-node
        - name: xpack.security.enabled
          value: "true"
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
        imagePullPolicy: ""
        livenessProbe:
          exec:
            command:
            - curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
          failureThreshold: 10
          periodSeconds: 20
        name: elasticsearch
        ports:
        - containerPort: 9200
        resources: {}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: esdata
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: esdata
        persistentVolumeClaim:
          claimName: esdata
status: {}
